{"ast":null,"code":"var _jsxFileName = \"/Users/anuwadhwa/Desktop/React JS/firegram/src/comps/ImageGrid.js\";\nimport React, { useState } from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\nconst [docId, setDocId] = useState('');\n\nconst ImageGrid = ({\n  setSelected\n}) => {\n  const {\n    docs\n  } = useFirestore('images');\n  console.log(docs);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, docs && docs.map(doc => /*#__PURE__*/React.createElement(motion.div, {\n    className: \"img-wrap\",\n    key: doc.id,\n    layout: true,\n    whileHover: {\n      opacity: 1\n    },\n    s: true,\n    onClick: () => setSelected(doc.url),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(motion.img, {\n    src: doc.url,\n    alt: \"uploaded pic\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      delay: 1\n    },\n    onClick: () => {\n      setDocId(doc.id);\n      console.log(doc.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(motion.p, {\n    layout: true,\n    whileHover: {\n      opacity: 1\n    },\n    s: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"hey\"))));\n};\n\nexport default ImageGrid;\nexport { docId };","map":{"version":3,"sources":["/Users/anuwadhwa/Desktop/React JS/firegram/src/comps/ImageGrid.js"],"names":["React","useState","useFirestore","motion","docId","setDocId","ImageGrid","setSelected","docs","console","log","map","doc","id","opacity","url","delay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACC,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;;AACD,MAAMK,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAASN,YAAY,CAAC,QAAD,CAA3B;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAIA,sBAAQ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACPA,IAAI,IAAIA,IAAI,CAACG,GAAL,CAASC,GAAG,iBACnB,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAiC,IAAA,GAAG,EAAEA,GAAG,CAACC,EAA1C;AACE,IAAA,MAAM,MADR;AAEE,IAAA,UAAU,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFd;AAE6B,IAAA,CAAC,MAF9B;AAGE,IAAA,OAAO,EAAE,MAAMP,WAAW,CAACK,GAAG,CAACG,GAAL,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAEH,GAAG,CAACG,GAArB;AAA0B,IAAA,GAAG,EAAC,cAA9B;AACE,IAAA,OAAO,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGE,IAAA,UAAU,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAHd;AAIE,IAAA,OAAO,EAAE,MAAI;AAACX,MAAAA,QAAQ,CAACO,GAAG,CAACC,EAAL,CAAR;AAAiBJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,EAAhB;AAAqB,KAJtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAWI,oBAAC,MAAD,CAAQ,CAAR;AAAU,IAAA,MAAM,MAAhB;AACF,IAAA,UAAU,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADV;AACyB,IAAA,CAAC,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXJ,CADO,CADD,CAAR;AAmBH,CA1BD;;AA2BA,eAAeR,SAAf;AACA,SAAQF,KAAR","sourcesContent":["import React, { useState } from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport {motion} from 'framer-motion';\n const [docId,setDocId] = useState('');\nconst ImageGrid = ({setSelected})=>{\n    const {docs} = useFirestore('images');\n   \n    console.log(docs);\n\n    \n\n    return (<div className=\"img-grid\">\n    {docs && docs.map(doc => (\n      <motion.div className=\"img-wrap\" key={doc.id} \n        layout\n        whileHover={{ opacity: 1 }}s\n        onClick={() => setSelected(doc.url)}\n      >\n        <motion.img src={doc.url} alt=\"uploaded pic\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1 }}\n          onClick={()=>{setDocId(doc.id);console.log(doc.id);}}\n        />\n          <motion.p layout\n        whileHover={{ opacity: 1 }}s>hey</motion.p>\n      </motion.div>\n    ))}\n  </div>\n    );\n}\nexport default ImageGrid;\nexport {docId};"]},"metadata":{},"sourceType":"module"}